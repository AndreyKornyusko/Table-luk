[{"H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\index.tsx":"1","H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\reportWebVitals.ts":"2","H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\App.tsx":"3","H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Componets\\TodoEditor\\TodoEditor.tsx":"4","H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Componets\\TodoList\\TodoList.tsx":"5","H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Componets\\AuthManager\\AuthManager.tsx":"6","H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Context\\Authentication.tsx":"7"},{"size":625,"mtime":1608671346153,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1771,"mtime":1608644909786,"results":"11","hashOfConfig":"9"},{"size":688,"mtime":1608643879601,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1608629391425,"results":"13","hashOfConfig":"9"},{"size":887,"mtime":1608706308167,"results":"14","hashOfConfig":"9"},{"size":520,"mtime":1608706199696,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1wopgtt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\index.tsx",[],["32","33"],"H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\reportWebVitals.ts",[],"H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\App.tsx",["34"],"import React, { useEffect, useReducer } from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport TodoEditor from '../src/Componets/TodoEditor/TodoEditor';\nimport TodoList from '../src/Componets/TodoList/TodoList';\nimport AuthManager from '../src/Componets/AuthManager/AuthManager';\n\nfunction App() {\n\n  const ActionType = {\n    ADD_TODO: 'ADD_TODO',\n    DELETE_TODO: 'DELETE_TODO',\n    FETCH_TODOS: 'FETCH_TODOS',\n\n  }\n\n  const todosReducer = (state, { type, payload }) => {\n    switch (type) {\n      case ActionType.ADD_TODO:\n        return [...state, payload.todo];\n\n      case ActionType.DELETE_TODO:\n        return state.filter(todo => todo.id !== payload.id);\n\n      case ActionType.FETCH_TODOS:\n        return payload.todos;\n\n      default:\n        return state;\n    }\n  }\n\n  const [todos, dispatch] = useReducer(todosReducer, [])\n\n  const addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text\n    }\n\n    dispatch({\n      type: ActionType.ADD_TODO,\n      payload: { todo }\n    })\n  }\n\n  const deleteTodo = id => {\n    dispatch({\n      type: ActionType.DELETE_TODO,\n      payload: { id }\n    })\n  }\n\n  useEffect(() => {\n    const persistedTodos = localStorage.getItem('todos');\n    if (persistedTodos) {\n      const todos = JSON.parse(persistedTodos);\n      dispatch({\n        type: ActionType.FETCH_TODOS,\n        payload: { todos },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n\n  return (\n    <div className=\"App\">\n      <AuthManager />\n      <h1 className=\"app-title\">Amazing todos</h1>\n      <TodoEditor onSave={addTodo} />\n      {todos.length > 0 && <TodoList items={todos} onDeleteTodo={deleteTodo} />}\n    </div>\n  );\n}\n\nexport default App;\n","H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Componets\\TodoEditor\\TodoEditor.tsx",[],"H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Componets\\TodoList\\TodoList.tsx",[],"H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Componets\\AuthManager\\AuthManager.tsx",[],"H:\\PROGRAMMING\\WORK\\WTT Solution\\todo-hooks\\my-app\\src\\Context\\Authentication.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":63,"column":6,"nodeType":"41","endLine":63,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ActionType.FETCH_TODOS'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [ActionType.FETCH_TODOS]",{"range":"48","text":"49"},[1402,1404],"[ActionType.FETCH_TODOS]"]